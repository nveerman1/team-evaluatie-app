"""init schema

Revision ID: 5319ae216851
Revises:
Create Date: 2025-10-10 22:55:41.885249

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "5319ae216851"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "courses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("period", sa.String(length=50), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "school_id", "name", "period", name="uq_course_name_period"
        ),
    )
    op.create_index(op.f("ix_courses_id"), "courses", ["id"], unique=False)
    op.create_index(
        op.f("ix_courses_school_id"), "courses", ["school_id"], unique=False
    )
    op.create_table(
        "rubrics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("scale_min", sa.SmallInteger(), nullable=False),
        sa.Column("scale_max", sa.SmallInteger(), nullable=False),
        sa.Column("metadata_json", sa.JSON(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_rubrics_id"), "rubrics", ["id"], unique=False)
    op.create_index(
        op.f("ix_rubrics_school_id"), "rubrics", ["school_id"], unique=False
    )
    op.create_table(
        "schools",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_schools_id"), "schools", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("role", sa.String(length=20), nullable=False),
        sa.Column("auth_provider", sa.String(length=50), nullable=True),
        sa.Column("password_hash", sa.String(length=255), nullable=True),
        sa.Column("archived", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("school_id", "email", name="uq_user_email_per_school"),
    )
    op.create_index("ix_user_role_school", "users", ["school_id", "role"], unique=False)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_school_id"), "users", ["school_id"], unique=False)
    op.create_table(
        "evaluations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("course_id", sa.Integer(), nullable=False),
        sa.Column("rubric_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("settings", sa.JSON(), nullable=False),
        sa.Column("status", sa.String(length=30), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["course_id"], ["courses.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["rubric_id"], ["rubrics.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_eval_course", "evaluations", ["course_id"], unique=False)
    op.create_index("ix_eval_rubric", "evaluations", ["rubric_id"], unique=False)
    op.create_index(op.f("ix_evaluations_id"), "evaluations", ["id"], unique=False)
    op.create_index(
        op.f("ix_evaluations_school_id"), "evaluations", ["school_id"], unique=False
    )
    op.create_table(
        "groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("course_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["course_id"], ["courses.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_group_course", "groups", ["course_id"], unique=False)
    op.create_index(op.f("ix_groups_id"), "groups", ["id"], unique=False)
    op.create_index(op.f("ix_groups_school_id"), "groups", ["school_id"], unique=False)
    op.create_table(
        "rubric_criteria",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("rubric_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=150), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.Column("descriptors", sa.JSON(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["rubric_id"], ["rubrics.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_criterion_rubric", "rubric_criteria", ["rubric_id"], unique=False
    )
    op.create_index(
        op.f("ix_rubric_criteria_id"), "rubric_criteria", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_rubric_criteria_school_id"),
        "rubric_criteria",
        ["school_id"],
        unique=False,
    )
    op.create_table(
        "allocations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("evaluation_id", sa.Integer(), nullable=False),
        sa.Column("reviewer_id", sa.Integer(), nullable=False),
        sa.Column("reviewee_id", sa.Integer(), nullable=False),
        sa.Column("is_self", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["evaluation_id"], ["evaluations.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["reviewee_id"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["reviewer_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "evaluation_id", "reviewer_id", "reviewee_id", name="uq_allocation_unique"
        ),
    )
    op.create_index(
        "ix_alloc_eval_reviewee",
        "allocations",
        ["evaluation_id", "reviewee_id"],
        unique=False,
    )
    op.create_index(
        "ix_alloc_eval_reviewer",
        "allocations",
        ["evaluation_id", "reviewer_id"],
        unique=False,
    )
    op.create_index(op.f("ix_allocations_id"), "allocations", ["id"], unique=False)
    op.create_index(
        op.f("ix_allocations_school_id"), "allocations", ["school_id"], unique=False
    )
    op.create_table(
        "grades",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("evaluation_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("group_grade", sa.Float(), nullable=True),
        sa.Column("gcf", sa.Float(), nullable=True),
        sa.Column("spr", sa.Float(), nullable=True),
        sa.Column("suggested_grade", sa.Float(), nullable=True),
        sa.Column("published_grade", sa.Float(), nullable=True),
        sa.Column("override_reason", sa.Text(), nullable=True),
        sa.Column("published_at", sa.DateTime(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["evaluation_id"], ["evaluations.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("evaluation_id", "user_id", name="uq_grade_once"),
    )
    op.create_index("ix_grade_eval", "grades", ["evaluation_id"], unique=False)
    op.create_index(op.f("ix_grades_id"), "grades", ["id"], unique=False)
    op.create_index(op.f("ix_grades_school_id"), "grades", ["school_id"], unique=False)
    op.create_table(
        "group_members",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role_in_team", sa.String(length=50), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["group_id"], ["groups.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("group_id", "user_id", name="uq_member_once"),
    )
    op.create_index(op.f("ix_group_members_id"), "group_members", ["id"], unique=False)
    op.create_index(
        op.f("ix_group_members_school_id"), "group_members", ["school_id"], unique=False
    )
    op.create_index("ix_member_user", "group_members", ["user_id"], unique=False)
    op.create_table(
        "reflections",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("evaluation_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("word_count", sa.Integer(), nullable=False),
        sa.Column("submitted_at", sa.DateTime(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["evaluation_id"], ["evaluations.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("evaluation_id", "user_id", name="uq_one_reflection"),
    )
    op.create_index(
        "ix_reflection_eval", "reflections", ["evaluation_id"], unique=False
    )
    op.create_index(op.f("ix_reflections_id"), "reflections", ["id"], unique=False)
    op.create_index(
        op.f("ix_reflections_school_id"), "reflections", ["school_id"], unique=False
    )
    op.create_table(
        "reviewer_ratings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("allocation_id", sa.Integer(), nullable=False),
        sa.Column("rating", sa.SmallInteger(), nullable=False),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["allocation_id"], ["allocations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("allocation_id", name="uq_reviewer_rating_once"),
    )
    op.create_index(
        op.f("ix_reviewer_ratings_id"), "reviewer_ratings", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_reviewer_ratings_school_id"),
        "reviewer_ratings",
        ["school_id"],
        unique=False,
    )
    op.create_table(
        "scores",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("allocation_id", sa.Integer(), nullable=False),
        sa.Column("criterion_id", sa.Integer(), nullable=False),
        sa.Column("score", sa.SmallInteger(), nullable=False),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("attachments", sa.JSON(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["allocation_id"], ["allocations.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["criterion_id"], ["rubric_criteria.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "allocation_id", "criterion_id", name="uq_one_score_per_criterion"
        ),
    )
    op.create_index("ix_score_allocation", "scores", ["allocation_id"], unique=False)
    op.create_index(op.f("ix_scores_id"), "scores", ["id"], unique=False)
    op.create_index(op.f("ix_scores_school_id"), "scores", ["school_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_scores_school_id"), table_name="scores")
    op.drop_index(op.f("ix_scores_id"), table_name="scores")
    op.drop_index("ix_score_allocation", table_name="scores")
    op.drop_table("scores")
    op.drop_index(op.f("ix_reviewer_ratings_school_id"), table_name="reviewer_ratings")
    op.drop_index(op.f("ix_reviewer_ratings_id"), table_name="reviewer_ratings")
    op.drop_table("reviewer_ratings")
    op.drop_index(op.f("ix_reflections_school_id"), table_name="reflections")
    op.drop_index(op.f("ix_reflections_id"), table_name="reflections")
    op.drop_index("ix_reflection_eval", table_name="reflections")
    op.drop_table("reflections")
    op.drop_index("ix_member_user", table_name="group_members")
    op.drop_index(op.f("ix_group_members_school_id"), table_name="group_members")
    op.drop_index(op.f("ix_group_members_id"), table_name="group_members")
    op.drop_table("group_members")
    op.drop_index(op.f("ix_grades_school_id"), table_name="grades")
    op.drop_index(op.f("ix_grades_id"), table_name="grades")
    op.drop_index("ix_grade_eval", table_name="grades")
    op.drop_table("grades")
    op.drop_index(op.f("ix_allocations_school_id"), table_name="allocations")
    op.drop_index(op.f("ix_allocations_id"), table_name="allocations")
    op.drop_index("ix_alloc_eval_reviewer", table_name="allocations")
    op.drop_index("ix_alloc_eval_reviewee", table_name="allocations")
    op.drop_table("allocations")
    op.drop_index(op.f("ix_rubric_criteria_school_id"), table_name="rubric_criteria")
    op.drop_index(op.f("ix_rubric_criteria_id"), table_name="rubric_criteria")
    op.drop_index("ix_criterion_rubric", table_name="rubric_criteria")
    op.drop_table("rubric_criteria")
    op.drop_index(op.f("ix_groups_school_id"), table_name="groups")
    op.drop_index(op.f("ix_groups_id"), table_name="groups")
    op.drop_index("ix_group_course", table_name="groups")
    op.drop_table("groups")
    op.drop_index(op.f("ix_evaluations_school_id"), table_name="evaluations")
    op.drop_index(op.f("ix_evaluations_id"), table_name="evaluations")
    op.drop_index("ix_eval_rubric", table_name="evaluations")
    op.drop_index("ix_eval_course", table_name="evaluations")
    op.drop_table("evaluations")
    op.drop_index(op.f("ix_users_school_id"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index("ix_user_role_school", table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_schools_id"), table_name="schools")
    op.drop_table("schools")
    op.drop_index(op.f("ix_rubrics_school_id"), table_name="rubrics")
    op.drop_index(op.f("ix_rubrics_id"), table_name="rubrics")
    op.drop_table("rubrics")
    op.drop_index(op.f("ix_courses_school_id"), table_name="courses")
    op.drop_index(op.f("ix_courses_id"), table_name="courses")
    op.drop_table("courses")
    # ### end Alembic commands ###
