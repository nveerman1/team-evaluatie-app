name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  backend:
    name: Backend (FastAPI) – Lint/Type/Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements-ci.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-ci.txt

      - name: Ruff (lint)
        if: ${{ hashFiles('backend/**/*.py') != '' }}
        run: ruff check . --output-format=github --exit-zero

      - name: Black (format check)
        if: ${{ hashFiles('backend/**/*.py') != '' }}
        run: black --check .

      - name: Mypy (type check)
        if: ${{ hashFiles('backend/**/*.py') != '' }}
        run: mypy app
        continue-on-error: true

      - name: Pytest
        if: ${{ hashFiles('backend/tests/**/*.py') != '' }}
        run: pytest -q
        continue-on-error: true

  frontend:
    name: Frontend (Next.js) – Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Check if frontend exists
        id: has_frontend
        run: |
          if [ -f package.json ]; then
            echo "present=true" >> $GITHUB_OUTPUT
          else
            echo "present=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-node@v4
        if: ${{ steps.has_frontend.outputs.present == 'true' }}
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Enable Corepack
        if: ${{ steps.has_frontend.outputs.present == 'true' }}
        run: corepack enable

      - name: Install
        if: ${{ steps.has_frontend.outputs.present == 'true' }}
        run: |
          if [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lock
